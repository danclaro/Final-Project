1. To get an idea about how difficult it is to unambiguously identify parts-of-speech select several words
that can be a noun, verb, adjective, and adverb, find their high frequency senses using WordNet, examine
their definitions and example uses, and try to generate some rules for how to determine as to when they
are a noun, verb, adjective, or adverb from their context.

Best, Light, Back, Last

If the word is between a determiner ('the'/'a'/'an'/'your'/etc.) and another word that is not a noun, it is a noun.

'My parents always tell me that I'm the best.'
'The light has been turned off.'
'The masseuse noticed a lot of tension in the back.'
'This snack will be the last for tonight.'

If a noun or 'to' is before the word, it is a verb.

'I have to best my competitors in the race.'
'The fireworks are going to light up the sky.'
'I feel morally inclined to back this candidate.'
'This exam is going to last an entire hour.'

If there is a noun after the word, it is an adjective.

'I'm the best boxer in New Jersey.'
'I'm going to carry some light luggage.'
'They are playing in the back yard.'
'The last slice in the pizza box has been taken.'

If the word is adjacent to a verb or after a noun, it is an adverb.

'I work best in person.'
'I only brought my backpack so I could travel light.'
'After I realized I left my phone at home, I went back.'
'The pepperoni slices were eaten last.'

2.

5.1 Computing minimum edit distances by hand, figure out whether drive is closer to brief or to divers, and what the edit distance is.
You may use any version of distance that you like.

Drive is closer to divers than it is to brief.

When you look at the proximity between 2 strings, you can calculate the edit distance
as the minimum number of single character edit to convert one string into other.

    B R I E F           D I V E R S
  0 1 2 3 4 5         0 1 2 3 4 5 6
D 1 2 3 4 5 6       D 1 0 1 2 3 4 5
R 2 3 2 3 4 5       R 2 1 2 3 4 3 4
I 3 4 3 2 3 4       I 3 2 1 2 3 4 5
V 4 5 4 3 4 5       V 4 3 2 1 2 3 4
E 5 6 5 4 3 4       E 5 4 3 2 1 2 3

drive -> (insert s) drives (+1) -> (insert r) drivers (+1) -> (delete r) divers (+1)

The edit distance between drive and divers is 3.

drive -> (delete v) drie (+1) -> (insert f) drief (+1) -> (delete d & insert b) brief (+2)

The edit distance between drive and brief is 4.     3 < 4       divers < brief

5.2     Now implement a minimum edit distance algorithm and use your handcomputed results to check your code.

#include <bits/stdc++.h>
using namespace std;

int min(int j, int k, int l) { return min(min(j, k), l); }

int min_edit_distance(string str1, string str2, int x, int y)
{

   int ed[x + 1][y + 1];

   for (int a = 0; a <= x; a++) {
       for (int b = 0; b <= y; b++) {

           if (b == 0) {
               ed[a][b] = a; 
               }
           else if (str1[a - 1] == str2[b - 1]) {
               ed[a][b] = ed[a - 1][b - 1]; 
               }
           else if (a == 0) {
               ed[a][b] = b; 
               }
           else {
               ed[a][b] = 1 + min(ed[a][b - 1], ed[a - 1][b], ed[a - 1][b - 1]); }
            }
   }

   return ed[x][y];
}


int main()
{
   string ex1 = "drive";
   string ex2 = "divers";

   cout << min_edit_distance(drive, divers, ex1.length(),
                   ex2.length());
}

3.

180. Many words, like ski and race, can be used as nouns or verbs with no difference in pronunciation. Can you think of others? 
Hint: think of a commonplace object and try to put the word to before it to see if it can also be a verb, or think of an action and try to put 
the before it to see if it can also be a noun. Now make up a sentence with both uses of this word, and run the POS tagger on this sentence.

"We used the steel hammer to hammer in the nail."

"Today, I decided to drink my favorite drink, apple juice."

"We had to milk the cow to get the milk for some homemade ice cream."

184. Plot the frequency distribution just shown using tag_fd.plot(cumulative=True). What percentage of words are tagged using the first five tags of the above list?

%

186. Given the list of past participles specified by cfd2['VN'].keys(), try to collect a list of all the word-tag pairs that immediately precede items in that list.

for x in range(len(wsj)): 
if wsj[x][0] in cfd2['VN'].keys(): 
print wsj['have ' + (x-1):(x+1)]

for x in range(len(wsj)): 
if wsj[x][0] in cfd2['VN'].keys(): 
print wsj['has ' + (x-1):(x+1)]

'have been', 'have expected', 'have made', 'have compared', 'have based', 'have priced', 'have used', 'have sold',
'have named', 'have designed', 'have held', 'have fined', 'have taken', 'have paid', 'have traded', 'have said',

'has been', 'has expected', 'has made', 'has compared', 'has based', 'has priced', 'has used', 'has sold',
'has named', 'has designed', 'has held', 'has fined', 'has taken', 'has paid', 'has traded', 'has said',

188. Open the POS concordance tool nltk.app.concordance() and load the complete Brown Corpus (simplified tagset). Now pick some of the words
listed at the end of the previous code example and see how the tag of the word correlates with the context of the word. E.g., search for near
to see all forms mixed together, near/ADJ to see it used as an adjective, near N to see just those cases where a noun follows, and so forth.
